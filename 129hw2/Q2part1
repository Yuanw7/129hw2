import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Stereographic projection function
def stereographic_projection(x, y, z):
    return x / (1 - z), y / (1 - z)

# Generate mesh points on the unit sphere
theta = np.linspace(0, np.pi, 100)
phi = np.linspace(0, 2 * np.pi, 100)
theta, phi = np.meshgrid(theta, phi)

# Convert to Cartesian coordinates
x = np.sin(theta) * np.cos(phi)
y = np.sin(theta) * np.sin(phi)
z = np.cos(theta)

# Define curves on the sphere
def curve1(phi):
    return np.sin(phi), np.cos(phi), np.zeros_like(phi)

def curve2(phi):
    return np.zeros_like(phi), np.sin(phi), np.cos(phi)

phi_vals = np.linspace(0, 2 * np.pi, 100)
x1, y1, z1 = curve1(phi_vals)
x2, y2, z2 = curve2(phi_vals)

# Project curves
x1_proj, y1_proj = stereographic_projection(x1, y1, z1)
x2_proj, y2_proj = stereographic_projection(x2, y2, z2)

# Plot curves on the sphere and their projections
fig = plt.figure(figsize=(12, 6))

# Plot sphere with curves
ax1 = fig.add_subplot(121, projection='3d')
ax1.plot_surface(x, y, z, color='lightblue', edgecolor='k', alpha=0.6)
ax1.plot(x1, y1, z1, color='red', label='Curve 1')
ax1.plot(x2, y2, z2, color='blue', label='Curve 2')
ax1.set_title("Unit Sphere with Curves")
ax1.legend()

# Plot projected curves
ax2 = fig.add_subplot(122)
ax2.plot(x1_proj, y1_proj, color='red', label='Curve 1 Projection')
ax2.plot(x2_proj, y2_proj, color='blue', label='Curve 2 Projection')
ax2.set_title("Stereographic Projection of Curves")
ax2.set_xlabel("x'")
ax2.set_ylabel("y'")
ax2.legend()

plt.show()
