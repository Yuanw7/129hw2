# Define a closed loop on the sphere
def closed_loop(phi):
    return np.sin(phi), np.cos(phi), np.zeros_like(phi)

x_cl, y_cl, z_cl = closed_loop(phi_vals)

# Project closed loop
x_cl_proj, y_cl_proj = stereographic_projection(x_cl, y_cl, z_cl)

# Plot parallel transport trajectories
fig = plt.figure(figsize=(12, 6))

# Plot sphere with closed loop
ax1 = fig.add_subplot(121, projection='3d')
ax1.plot_surface(x, y, z, color='lightblue', edgecolor='k', alpha=0.6)
ax1.plot(x_cl, y_cl, z_cl, color='purple', label='Closed Loop')
ax1.set_title("Unit Sphere with Closed Loop")
ax1.legend()

# Plot projected closed loop
ax2 = fig.add_subplot(122)
ax2.plot(x_cl_proj, y_cl_proj, color='purple', label='Closed Loop Projection')
ax2.set_title("Stereographic Projection of Closed Loop")
ax2.set_xlabel("x'")
ax2.set_ylabel("y'")
ax2.legend()

plt.show()
